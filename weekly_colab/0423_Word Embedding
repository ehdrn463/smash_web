{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"0423_Word Embedding","provenance":[{"file_id":"1uuDsaOMa5vtkSpABcJ0TDPKxz8PC_b1x","timestamp":1587648255679}],"collapsed_sections":[],"toc_visible":true,"authorship_tag":"ABX9TyMKvHCn+c7DMADIYR7t6Ul8"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"ah4nMFqkGGb-","colab_type":"code","colab":{}},"source":["import pandas as pd # 데이터 전처리\n","import numpy as np # 데이터 전처리\n","import random #데이터 전처리\n","from pandas import DataFrame #데이터 전처리\n","from collections import Counter #데이터 전처리\n","\n","from tqdm import tqdm #시간 측정용\n","\n","from sklearn.feature_extraction.text import CountVectorizer # model setting\n","from sklearn.model_selection import train_test_split  # model setting\n","\n","from sklearn.naive_bayes import MultinomialNB  # model 관련\n","from sklearn.metrics import roc_auc_score  # model 성능 확인\n","\n","import re\n","from tqdm import tqdm_notebook"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"8o7nmppSGQpC","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"eiIDyRGAGC03","colab_type":"text"},"source":["# Mecab 설치"]},{"cell_type":"code","metadata":{"id":"DTlvzvQtD6EP","colab_type":"code","outputId":"3cc1954a-711e-4ea7-a09a-a586ce81261f","executionInfo":{"status":"ok","timestamp":1587709757965,"user_tz":-540,"elapsed":6392,"user":{"displayName":"‍김동구[학생](정경대학 언론정보학과)","photoUrl":"","userId":"02800889453040610191"}},"colab":{"base_uri":"https://localhost:8080/","height":52}},"source":["!pip install git"],"execution_count":0,"outputs":[{"output_type":"stream","text":["\u001b[31mERROR: Could not find a version that satisfies the requirement git (from versions: none)\u001b[0m\n","\u001b[31mERROR: No matching distribution found for git\u001b[0m\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"rsWGlup-EdRt","colab_type":"code","outputId":"ecdca834-6b71-401d-daf9-13ccf88ab872","executionInfo":{"status":"ok","timestamp":1587709761804,"user_tz":-540,"elapsed":10218,"user":{"displayName":"‍김동구[학생](정경대학 언론정보학과)","photoUrl":"","userId":"02800889453040610191"}},"colab":{"base_uri":"https://localhost:8080/","height":122}},"source":["! git clone https://github.com/SOMJANG/Mecab-ko-for-Google-Colab.git"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Cloning into 'Mecab-ko-for-Google-Colab'...\n","remote: Enumerating objects: 60, done.\u001b[K\n","remote: Counting objects:   1% (1/60)\u001b[K\rremote: Counting objects:   3% (2/60)\u001b[K\rremote: Counting objects:   5% (3/60)\u001b[K\rremote: Counting objects:   6% (4/60)\u001b[K\rremote: Counting objects:   8% (5/60)\u001b[K\rremote: Counting objects:  10% (6/60)\u001b[K\rremote: Counting objects:  11% (7/60)\u001b[K\rremote: Counting objects:  13% (8/60)\u001b[K\rremote: Counting objects:  15% (9/60)\u001b[K\rremote: Counting objects:  16% (10/60)\u001b[K\rremote: Counting objects:  18% (11/60)\u001b[K\rremote: Counting objects:  20% (12/60)\u001b[K\rremote: Counting objects:  21% (13/60)\u001b[K\rremote: Counting objects:  23% (14/60)\u001b[K\rremote: Counting objects:  25% (15/60)\u001b[K\rremote: Counting objects:  26% (16/60)\u001b[K\rremote: Counting objects:  28% (17/60)\u001b[K\rremote: Counting objects:  30% (18/60)\u001b[K\rremote: Counting objects:  31% (19/60)\u001b[K\rremote: Counting objects:  33% (20/60)\u001b[K\rremote: Counting objects:  35% (21/60)\u001b[K\rremote: Counting objects:  36% (22/60)\u001b[K\rremote: Counting objects:  38% (23/60)\u001b[K\rremote: Counting objects:  40% (24/60)\u001b[K\rremote: Counting objects:  41% (25/60)\u001b[K\rremote: Counting objects:  43% (26/60)\u001b[K\rremote: Counting objects:  45% (27/60)\u001b[K\rremote: Counting objects:  46% (28/60)\u001b[K\rremote: Counting objects:  48% (29/60)\u001b[K\rremote: Counting objects:  50% (30/60)\u001b[K\rremote: Counting objects:  51% (31/60)\u001b[K\rremote: Counting objects:  53% (32/60)\u001b[K\rremote: Counting objects:  55% (33/60)\u001b[K\rremote: Counting objects:  56% (34/60)\u001b[K\rremote: Counting objects:  58% (35/60)\u001b[K\rremote: Counting objects:  60% (36/60)\u001b[K\rremote: Counting objects:  61% (37/60)\u001b[K\rremote: Counting objects:  63% (38/60)\u001b[K\rremote: Counting objects:  65% (39/60)\u001b[K\rremote: Counting objects:  66% (40/60)\u001b[K\rremote: Counting objects:  68% (41/60)\u001b[K\rremote: Counting objects:  70% (42/60)\u001b[K\rremote: Counting objects:  71% (43/60)\u001b[K\rremote: Counting objects:  73% (44/60)\u001b[K\rremote: Counting objects:  75% (45/60)\u001b[K\rremote: Counting objects:  76% (46/60)\u001b[K\rremote: Counting objects:  78% (47/60)\u001b[K\rremote: Counting objects:  80% (48/60)\u001b[K\rremote: Counting objects:  81% (49/60)\u001b[K\rremote: Counting objects:  83% (50/60)\u001b[K\rremote: Counting objects:  85% (51/60)\u001b[K\rremote: Counting objects:  86% (52/60)\u001b[K\rremote: Counting objects:  88% (53/60)\u001b[K\rremote: Counting objects:  90% (54/60)\u001b[K\rremote: Counting objects:  91% (55/60)\u001b[K\rremote: Counting objects:  93% (56/60)\u001b[K\rremote: Counting objects:  95% (57/60)\u001b[K\rremote: Counting objects:  96% (58/60)\u001b[K\rremote: Counting objects:  98% (59/60)\u001b[K\rremote: Counting objects: 100% (60/60)\u001b[K\rremote: Counting objects: 100% (60/60), done.\u001b[K\n","remote: Compressing objects:   1% (1/55)\u001b[K\rremote: Compressing objects:   3% (2/55)\u001b[K\rremote: Compressing objects:   5% (3/55)\u001b[K\rremote: Compressing objects:   7% (4/55)\u001b[K\rremote: Compressing objects:   9% (5/55)\u001b[K\rremote: Compressing objects:  10% (6/55)\u001b[K\rremote: Compressing objects:  12% (7/55)\u001b[K\rremote: Compressing objects:  14% (8/55)\u001b[K\rremote: Compressing objects:  16% (9/55)\u001b[K\rremote: Compressing objects:  18% (10/55)\u001b[K\rremote: Compressing objects:  20% (11/55)\u001b[K\rremote: Compressing objects:  21% (12/55)\u001b[K\rremote: Compressing objects:  23% (13/55)\u001b[K\rremote: Compressing objects:  25% (14/55)\u001b[K\rremote: Compressing objects:  27% (15/55)\u001b[K\rremote: Compressing objects:  29% (16/55)\u001b[K\rremote: Compressing objects:  30% (17/55)\u001b[K\rremote: Compressing objects:  32% (18/55)\u001b[K\rremote: Compressing objects:  34% (19/55)\u001b[K\rremote: Compressing objects:  36% (20/55)\u001b[K\rremote: Compressing objects:  38% (21/55)\u001b[K\rremote: Compressing objects:  40% (22/55)\u001b[K\rremote: Compressing objects:  41% (23/55)\u001b[K\rremote: Compressing objects:  43% (24/55)\u001b[K\rremote: Compressing objects:  45% (25/55)\u001b[K\rremote: Compressing objects:  47% (26/55)\u001b[K\rremote: Compressing objects:  49% (27/55)\u001b[K\rremote: Compressing objects:  50% (28/55)\u001b[K\rremote: Compressing objects:  52% (29/55)\u001b[K\rremote: Compressing objects:  54% (30/55)\u001b[K\rremote: Compressing objects:  56% (31/55)\u001b[K\rremote: Compressing objects:  58% (32/55)\u001b[K\rremote: Compressing objects:  60% (33/55)\u001b[K\rremote: Compressing objects:  61% (34/55)\u001b[K\rremote: Compressing objects:  63% (35/55)\u001b[K\rremote: Compressing objects:  65% (36/55)\u001b[K\rremote: Compressing objects:  67% (37/55)\u001b[K\rremote: Compressing objects:  69% (38/55)\u001b[K\rremote: Compressing objects:  70% (39/55)\u001b[K\rremote: Compressing objects:  72% (40/55)\u001b[K\rremote: Compressing objects:  74% (41/55)\u001b[K\rremote: Compressing objects:  76% (42/55)\u001b[K\rremote: Compressing objects:  78% (43/55)\u001b[K\rremote: Compressing objects:  80% (44/55)\u001b[K\rremote: Compressing objects:  81% (45/55)\u001b[K\rremote: Compressing objects:  83% (46/55)\u001b[K\rremote: Compressing objects:  85% (47/55)\u001b[K\rremote: Compressing objects:  87% (48/55)\u001b[K\rremote: Compressing objects:  89% (49/55)\u001b[K\rremote: Compressing objects:  90% (50/55)\u001b[K\rremote: Compressing objects:  92% (51/55)\u001b[K\rremote: Compressing objects:  94% (52/55)\u001b[K\rremote: Compressing objects:  96% (53/55)\u001b[K\rremote: Compressing objects:  98% (54/55)\u001b[K\rremote: Compressing objects: 100% (55/55)\u001b[K\rremote: Compressing objects: 100% (55/55), done.\u001b[K\n","Unpacking objects:   1% (1/60)   \rUnpacking objects:   3% (2/60)   \rUnpacking objects:   5% (3/60)   \rUnpacking objects:   6% (4/60)   \rUnpacking objects:   8% (5/60)   \rUnpacking objects:  10% (6/60)   \rUnpacking objects:  11% (7/60)   \rUnpacking objects:  13% (8/60)   \rUnpacking objects:  15% (9/60)   \rUnpacking objects:  16% (10/60)   \rUnpacking objects:  18% (11/60)   \rUnpacking objects:  20% (12/60)   \rUnpacking objects:  21% (13/60)   \rUnpacking objects:  23% (14/60)   \rUnpacking objects:  25% (15/60)   \rUnpacking objects:  26% (16/60)   \rUnpacking objects:  28% (17/60)   \rUnpacking objects:  30% (18/60)   \rUnpacking objects:  31% (19/60)   \rUnpacking objects:  33% (20/60)   \rUnpacking objects:  35% (21/60)   \rUnpacking objects:  36% (22/60)   \rUnpacking objects:  38% (23/60)   \rUnpacking objects:  40% (24/60)   \rUnpacking objects:  41% (25/60)   \rUnpacking objects:  43% (26/60)   \rUnpacking objects:  45% (27/60)   \rUnpacking objects:  46% (28/60)   \rUnpacking objects:  48% (29/60)   \rUnpacking objects:  50% (30/60)   \rUnpacking objects:  51% (31/60)   \rremote: Total 60 (delta 23), reused 20 (delta 5), pack-reused 0\u001b[K\n","Unpacking objects:  53% (32/60)   \rUnpacking objects:  55% (33/60)   \rUnpacking objects:  56% (34/60)   \rUnpacking objects:  58% (35/60)   \rUnpacking objects:  60% (36/60)   \rUnpacking objects:  61% (37/60)   \rUnpacking objects:  63% (38/60)   \rUnpacking objects:  65% (39/60)   \rUnpacking objects:  66% (40/60)   \rUnpacking objects:  68% (41/60)   \rUnpacking objects:  70% (42/60)   \rUnpacking objects:  71% (43/60)   \rUnpacking objects:  73% (44/60)   \rUnpacking objects:  75% (45/60)   \rUnpacking objects:  76% (46/60)   \rUnpacking objects:  78% (47/60)   \rUnpacking objects:  80% (48/60)   \rUnpacking objects:  81% (49/60)   \rUnpacking objects:  83% (50/60)   \rUnpacking objects:  85% (51/60)   \rUnpacking objects:  86% (52/60)   \rUnpacking objects:  88% (53/60)   \rUnpacking objects:  90% (54/60)   \rUnpacking objects:  91% (55/60)   \rUnpacking objects:  93% (56/60)   \rUnpacking objects:  95% (57/60)   \rUnpacking objects:  96% (58/60)   \rUnpacking objects:  98% (59/60)   \rUnpacking objects: 100% (60/60)   \rUnpacking objects: 100% (60/60), done.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"eyW9OiP7Eddc","colab_type":"code","outputId":"cce43c5b-2843-4d39-e736-ac6dd7c32f79","executionInfo":{"status":"ok","timestamp":1587709761807,"user_tz":-540,"elapsed":10207,"user":{"displayName":"‍김동구[학생](정경대학 언론정보학과)","photoUrl":"","userId":"02800889453040610191"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["cd Mecab-ko-for-Google-Colab/"],"execution_count":0,"outputs":[{"output_type":"stream","text":["/content/Mecab-ko-for-Google-Colab\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"pTaAmYahEdgh","colab_type":"code","outputId":"18f32635-b966-492f-ab62-bc8ad2928425","executionInfo":{"status":"ok","timestamp":1587709766359,"user_tz":-540,"elapsed":14743,"user":{"displayName":"‍김동구[학생](정경대학 언론정보학과)","photoUrl":"","userId":"02800889453040610191"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["ls"],"execution_count":0,"outputs":[{"output_type":"stream","text":["\u001b[0m\u001b[01;34mimages\u001b[0m/  install_mecab-ko_on_colab190912.sh  LICENSE  README.md\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Swbmyn2OEdjO","colab_type":"code","outputId":"30d1fc26-2422-46ab-a339-ab061f6c7773","executionInfo":{"status":"ok","timestamp":1587710020521,"user_tz":-540,"elapsed":268889,"user":{"displayName":"‍김동구[학생](정경대학 언론정보학과)","photoUrl":"","userId":"02800889453040610191"}},"colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["! bash install_mecab-ko_on_colab190912.sh"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Installing konlpy.....\n","Collecting konlpy\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/85/0e/f385566fec837c0b83f216b2da65db9997b35dd675e107752005b7d392b1/konlpy-0.5.2-py2.py3-none-any.whl (19.4MB)\n","\u001b[K     |████████████████████████████████| 19.4MB 1.5MB/s \n","\u001b[?25hCollecting JPype1>=0.7.0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/4e/c9/cde4aae2f4ae7da6b46258d7233511f8b8f1468a3c782c0f2d70e61038b1/JPype1-0.7.3-cp36-cp36m-manylinux1_x86_64.whl (2.9MB)\n","\u001b[K     |████████████████████████████████| 2.9MB 32.5MB/s \n","\u001b[?25hRequirement already satisfied: numpy>=1.6 in /usr/local/lib/python3.6/dist-packages (from konlpy) (1.18.2)\n","Requirement already satisfied: lxml>=4.1.0 in /usr/local/lib/python3.6/dist-packages (from konlpy) (4.2.6)\n","Collecting colorama\n","  Downloading https://files.pythonhosted.org/packages/c9/dc/45cdef1b4d119eb96316b3117e6d5708a08029992b2fee2c143c7a0a5cc5/colorama-0.4.3-py2.py3-none-any.whl\n","Collecting beautifulsoup4==4.6.0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/9e/d4/10f46e5cfac773e22707237bfcd51bbffeaf0a576b0a847ec7ab15bd7ace/beautifulsoup4-4.6.0-py3-none-any.whl (86kB)\n","\u001b[K     |████████████████████████████████| 92kB 7.8MB/s \n","\u001b[?25hCollecting tweepy>=3.7.0\n","  Downloading https://files.pythonhosted.org/packages/36/1b/2bd38043d22ade352fc3d3902cf30ce0e2f4bf285be3b304a2782a767aec/tweepy-3.8.0-py2.py3-none-any.whl\n","Requirement already satisfied: requests>=2.11.1 in /usr/local/lib/python3.6/dist-packages (from tweepy>=3.7.0->konlpy) (2.21.0)\n","Requirement already satisfied: PySocks>=1.5.7 in /usr/local/lib/python3.6/dist-packages (from tweepy>=3.7.0->konlpy) (1.7.1)\n","Requirement already satisfied: six>=1.10.0 in /usr/local/lib/python3.6/dist-packages (from tweepy>=3.7.0->konlpy) (1.12.0)\n","Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.6/dist-packages (from tweepy>=3.7.0->konlpy) (1.3.0)\n","Requirement already satisfied: idna<2.9,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests>=2.11.1->tweepy>=3.7.0->konlpy) (2.8)\n","Requirement already satisfied: urllib3<1.25,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from requests>=2.11.1->tweepy>=3.7.0->konlpy) (1.24.3)\n","Requirement already satisfied: chardet<3.1.0,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests>=2.11.1->tweepy>=3.7.0->konlpy) (3.0.4)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.6/dist-packages (from requests>=2.11.1->tweepy>=3.7.0->konlpy) (2020.4.5.1)\n","Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.6/dist-packages (from requests-oauthlib>=0.7.0->tweepy>=3.7.0->konlpy) (3.1.0)\n","Installing collected packages: JPype1, colorama, beautifulsoup4, tweepy, konlpy\n","  Found existing installation: beautifulsoup4 4.6.3\n","    Uninstalling beautifulsoup4-4.6.3:\n","      Successfully uninstalled beautifulsoup4-4.6.3\n","  Found existing installation: tweepy 3.6.0\n","    Uninstalling tweepy-3.6.0:\n","      Successfully uninstalled tweepy-3.6.0\n","Successfully installed JPype1-0.7.3 beautifulsoup4-4.6.0 colorama-0.4.3 konlpy-0.5.2 tweepy-3.8.0\n","Done\n","Installing mecab-0.996-ko-0.9.2.tar.gz.....\n","Downloading mecab-0.996-ko-0.9.2.tar.gz.......\n","from https://bitbucket.org/eunjeon/mecab-ko/downloads/mecab-0.996-ko-0.9.2.tar.gz\n","--2020-04-24 06:29:00--  https://bitbucket.org/eunjeon/mecab-ko/downloads/mecab-0.996-ko-0.9.2.tar.gz\n","Resolving bitbucket.org (bitbucket.org)... 18.205.93.0, 18.205.93.1, 18.205.93.2, ...\n","Connecting to bitbucket.org (bitbucket.org)|18.205.93.0|:443... connected.\n","HTTP request sent, awaiting response... 302 Found\n","Location: https://bbuseruploads.s3.amazonaws.com/eunjeon/mecab-ko/downloads/mecab-0.996-ko-0.9.2.tar.gz?Signature=lMYfW%2BPMfhu3%2F1wRgGbCW1ZTK98%3D&Expires=1587711045&AWSAccessKeyId=AKIA6KOSE3BNJRRFUUX6&versionId=null&response-content-disposition=attachment%3B%20filename%3D%22mecab-0.996-ko-0.9.2.tar.gz%22 [following]\n","--2020-04-24 06:29:01--  https://bbuseruploads.s3.amazonaws.com/eunjeon/mecab-ko/downloads/mecab-0.996-ko-0.9.2.tar.gz?Signature=lMYfW%2BPMfhu3%2F1wRgGbCW1ZTK98%3D&Expires=1587711045&AWSAccessKeyId=AKIA6KOSE3BNJRRFUUX6&versionId=null&response-content-disposition=attachment%3B%20filename%3D%22mecab-0.996-ko-0.9.2.tar.gz%22\n","Resolving bbuseruploads.s3.amazonaws.com (bbuseruploads.s3.amazonaws.com)... 52.216.17.8\n","Connecting to bbuseruploads.s3.amazonaws.com (bbuseruploads.s3.amazonaws.com)|52.216.17.8|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 1414979 (1.3M) [application/x-tar]\n","Saving to: ‘mecab-0.996-ko-0.9.2.tar.gz’\n","\n","mecab-0.996-ko-0.9. 100%[===================>]   1.35M  7.57MB/s    in 0.2s    \n","\n","2020-04-24 06:29:01 (7.57 MB/s) - ‘mecab-0.996-ko-0.9.2.tar.gz’ saved [1414979/1414979]\n","\n","Done\n","Unpacking mecab-0.996-ko-0.9.2.tar.gz.......\n","Done\n","Change Directory to mecab-0.996-ko-0.9.2.......\n","installing mecab-0.996-ko-0.9.2.tar.gz........\n","configure\n","make\n","make check\n","make install\n","ldconfig\n","Done\n","Change Directory to /content\n","Downloading mecab-ko-dic-2.1.1-20180720.tar.gz.......\n","from https://bitbucket.org/eunjeon/mecab-ko-dic/downloads/mecab-ko-dic-2.1.1-20180720.tar.gz\n","--2020-04-24 06:30:36--  https://bitbucket.org/eunjeon/mecab-ko-dic/downloads/mecab-ko-dic-2.1.1-20180720.tar.gz\n","Resolving bitbucket.org (bitbucket.org)... 18.205.93.0, 18.205.93.2, 18.205.93.1, ...\n","Connecting to bitbucket.org (bitbucket.org)|18.205.93.0|:443... connected.\n","HTTP request sent, awaiting response... 302 Found\n","Location: https://bbuseruploads.s3.amazonaws.com/a4fcd83e-34f1-454e-a6ac-c242c7d434d3/downloads/b5a0c703-7b64-45ed-a2d7-180e962710b6/mecab-ko-dic-2.1.1-20180720.tar.gz?Signature=uvdr8DVp8zGEV7KpWP%2BtFjKtVRE%3D&Expires=1587711636&AWSAccessKeyId=AKIA6KOSE3BNJRRFUUX6&versionId=tzyxc1TtnZU_zEuaaQDGN4F76hPDpyFq&response-content-disposition=attachment%3B%20filename%3D%22mecab-ko-dic-2.1.1-20180720.tar.gz%22 [following]\n","--2020-04-24 06:30:36--  https://bbuseruploads.s3.amazonaws.com/a4fcd83e-34f1-454e-a6ac-c242c7d434d3/downloads/b5a0c703-7b64-45ed-a2d7-180e962710b6/mecab-ko-dic-2.1.1-20180720.tar.gz?Signature=uvdr8DVp8zGEV7KpWP%2BtFjKtVRE%3D&Expires=1587711636&AWSAccessKeyId=AKIA6KOSE3BNJRRFUUX6&versionId=tzyxc1TtnZU_zEuaaQDGN4F76hPDpyFq&response-content-disposition=attachment%3B%20filename%3D%22mecab-ko-dic-2.1.1-20180720.tar.gz%22\n","Resolving bbuseruploads.s3.amazonaws.com (bbuseruploads.s3.amazonaws.com)... 52.217.42.124\n","Connecting to bbuseruploads.s3.amazonaws.com (bbuseruploads.s3.amazonaws.com)|52.217.42.124|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 49775061 (47M) [application/x-tar]\n","Saving to: ‘mecab-ko-dic-2.1.1-20180720.tar.gz’\n","\n","mecab-ko-dic-2.1.1- 100%[===================>]  47.47M  48.4MB/s    in 1.0s    \n","\n","2020-04-24 06:30:37 (48.4 MB/s) - ‘mecab-ko-dic-2.1.1-20180720.tar.gz’ saved [49775061/49775061]\n","\n","Done\n","Unpacking  mecab-ko-dic-2.1.1-20180720.tar.gz.......\n","Done\n","Change Directory to mecab-ko-dic-2.1.1-20180720\n","Done\n","installing........\n","configure\n","make\n","make install\n","apt-get update\n","apt-get upgrade\n","apt install curl\n","apt install git\n","bash <(curl -s https://raw.githubusercontent.com/konlpy/konlpy/master/scripts/mecab.sh)\n","Done\n","Successfully Installed\n","Now you can use Mecab\n","from konlpy.tag import Mecab\n","mecab = Mecab()\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"i3YXP_-efFd7","colab_type":"text"},"source":["# Directory 변경\n"]},{"cell_type":"code","metadata":{"id":"pZ0HVknOAvX1","colab_type":"code","outputId":"ca9a44ff-dd64-432d-f2dd-9421c836de05","executionInfo":{"status":"ok","timestamp":1587710044654,"user_tz":-540,"elapsed":293004,"user":{"displayName":"‍김동구[학생](정경대학 언론정보학과)","photoUrl":"","userId":"02800889453040610191"}},"colab":{"base_uri":"https://localhost:8080/","height":125}},"source":["from google.colab import drive\n","\n","drive.mount('/content/gdrive')"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&redirect_uri=urn%3aietf%3awg%3aoauth%3a2.0%3aoob&response_type=code&scope=email%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdocs.test%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive.photos.readonly%20https%3a%2f%2fwww.googleapis.com%2fauth%2fpeopleapi.readonly\n","\n","Enter your authorization code:\n","··········\n","Mounted at /content/gdrive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"tccohDOeKrn5","colab_type":"code","colab":{}},"source":["from konlpy.tag import Mecab\n","mecab = Mecab()\n","from tqdm import tqdm_notebook"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"plfTVr5jCwJF","colab_type":"code","outputId":"f0a4e344-4eac-4145-fd8c-381e60efbd66","executionInfo":{"status":"ok","timestamp":1587710060659,"user_tz":-540,"elapsed":2679,"user":{"displayName":"‍김동구[학생](정경대학 언론정보학과)","photoUrl":"","userId":"02800889453040610191"}},"colab":{"base_uri":"https://localhost:8080/","height":70}},"source":["ls    "],"execution_count":0,"outputs":[{"output_type":"stream","text":["\u001b[0m\u001b[01;34mgdrive\u001b[0m/                      \u001b[01;34mmecab-ko-dic-2.1.1-20180720\u001b[0m/        \u001b[01;34msample_data\u001b[0m/\n","\u001b[01;34mmecab-0.996-ko-0.9.2\u001b[0m/        mecab-ko-dic-2.1.1-20180720.tar.gz\n","mecab-0.996-ko-0.9.2.tar.gz  \u001b[01;34mMecab-ko-for-Google-Colab\u001b[0m/\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"PhkFOeRGj0WS","colab_type":"code","outputId":"4a16a852-e1d5-43f7-9b79-cfa3845295aa","executionInfo":{"status":"ok","timestamp":1587710051245,"user_tz":-540,"elapsed":666,"user":{"displayName":"‍김동구[학생](정경대학 언론정보학과)","photoUrl":"","userId":"02800889453040610191"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["cd .."],"execution_count":0,"outputs":[{"output_type":"stream","text":["/content\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"LegMrfLLUN6o","colab_type":"code","outputId":"00e2693c-45d6-4cc2-af0d-ac80f1008e43","executionInfo":{"status":"ok","timestamp":1587710076943,"user_tz":-540,"elapsed":711,"user":{"displayName":"‍김동구[학생](정경대학 언론정보학과)","photoUrl":"","userId":"02800889453040610191"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["cd gdrive/My\\ Drive/kb_data"],"execution_count":0,"outputs":[{"output_type":"stream","text":["/content/gdrive/My Drive/kb_data\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"3G7hwrWLUUqi","colab_type":"code","colab":{}},"source":["train = pd.read_csv('morph.csv')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"sRtbJglpHw-p","colab_type":"code","outputId":"f9365598-b356-481d-9973-917462b54111","executionInfo":{"status":"ok","timestamp":1587710735187,"user_tz":-540,"elapsed":607,"user":{"displayName":"‍김동구[학생](정경대학 언론정보학과)","photoUrl":"","userId":"02800889453040610191"}},"colab":{"base_uri":"https://localhost:8080/","height":296}},"source":["train.head()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>id</th>\n","      <th>year_month</th>\n","      <th>text</th>\n","      <th>smishing</th>\n","      <th>morph</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2017-01</td>\n","      <td>XXX은행성산XXX팀장입니다.행복한주말되세요</td>\n","      <td>0</td>\n","      <td>['XXX', '은', '행성', '산', 'XXX', '팀장', '입니다', '....</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2017-01</td>\n","      <td>오늘도많이웃으시는하루시작하세요XXX은행 진월동VIP라운지 XXX올림</td>\n","      <td>0</td>\n","      <td>['오늘', '도', '많이', '웃', '으시', '는', '하루', '시작', ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2017-01</td>\n","      <td>안녕하십니까 고객님. XXX은행입니다.금일 납부하셔야 할 금액은 153600원 입니...</td>\n","      <td>0</td>\n","      <td>['안녕', '하', '십니까', '고객', '님', '.', 'XXX', '은행'...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>2017-01</td>\n","      <td>XXX 고객님안녕하세요XXX은행 XXX지점입니다지난 한 해 동안 저희 XXX지점에 ...</td>\n","      <td>0</td>\n","      <td>['XXX', '고객', '님', '안녕', '하', '세요', 'XXX', '은행...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>2017-01</td>\n","      <td>1월은 새로움이 가득XXX입니다.올 한해 더 많이행복한 한해되시길바랍니다</td>\n","      <td>0</td>\n","      <td>['1', '월', '은', '새로움', '이', '가득', 'XXX', '입니다'...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Unnamed: 0  id  ... smishing                                              morph\n","0           0   0  ...        0  ['XXX', '은', '행성', '산', 'XXX', '팀장', '입니다', '....\n","1           1   1  ...        0  ['오늘', '도', '많이', '웃', '으시', '는', '하루', '시작', ...\n","2           2   2  ...        0  ['안녕', '하', '십니까', '고객', '님', '.', 'XXX', '은행'...\n","3           3   4  ...        0  ['XXX', '고객', '님', '안녕', '하', '세요', 'XXX', '은행...\n","4           4   5  ...        0  ['1', '월', '은', '새로움', '이', '가득', 'XXX', '입니다'...\n","\n","[5 rows x 6 columns]"]},"metadata":{"tags":[]},"execution_count":16}]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"bo8Pmz3VGCGn"},"source":["# Preprocessing Text\n","\n","1. 불용어 제거\n","- 불용어('을', '를')는 분석에 악영향을 미칠 수 있음.\n","- Raw Data에서 문자메시지 데이터를 비식별화하기 위해 'XXX'라고 표기한 것들을 제거해줄 필요가 있음. 가장 많이 등장한 단어로 'XXX' 가 나옴. \n","- 공통적으로 많이 사용되는 어미 제거 ex. '합니다', '입니다'\n","\n","2. 정규표현식 추가\n","- 라벨링 값에 따른 특수문자 유무 확인"]},{"cell_type":"markdown","metadata":{"id":"aEx4UeqFqMnw","colab_type":"text"},"source":["## Global Variables\n"]},{"cell_type":"code","metadata":{"id":"r6cK0_CLqRuN","colab_type":"code","colab":{}},"source":["spe_char = \"[-=+#/\\?:^$@*\\※~&%ㆍ!』\\\\‘|\\(\\)\\[\\]\\<\\>`\\'…》\\$]\"\n","spe_char_list = list(spe_char)\n","stop_words = ['x', 'xx', 'xxx',  '으로', '습니다', '까지', '합니다', '에서', '입니다', '셔서', '세요']"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"1Hx8_ylCPhRN","colab_type":"text"},"source":["## 1. 특수문자 갯수를 저장하는 '칼럼' 추가"]},{"cell_type":"code","metadata":{"id":"LIdAQ1XJpUOV","colab_type":"code","outputId":"e399ad1f-606a-4008-e129-1dc48b75d292","executionInfo":{"status":"ok","timestamp":1587710776775,"user_tz":-540,"elapsed":22664,"user":{"displayName":"‍김동구[학생](정경대학 언론정보학과)","photoUrl":"","userId":"02800889453040610191"}},"colab":{"base_uri":"https://localhost:8080/","height":140}},"source":["%%time\n","train['spe_num'] = 0\n","for idx, text in enumerate(train['text']):\n","    num = 0\n","    for spe in spe_char_list:\n","        temp = text.count(spe)\n","        num += temp\n","    train['spe_num'][idx] = num"],"execution_count":0,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:7: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  import sys\n"],"name":"stderr"},{"output_type":"stream","text":["CPU times: user 21.8 s, sys: 0 ns, total: 21.8 s\n","Wall time: 21.8 s\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"wfZtLmlDo6b1","colab_type":"text"},"source":["## 2. 문자 길이 추가하는 '칼럼'추가"]},{"cell_type":"code","metadata":{"id":"wfb0LwGkpUhZ","colab_type":"code","outputId":"9af37b77-d9b1-423b-9328-ba6570d7ad38","executionInfo":{"status":"ok","timestamp":1587710776777,"user_tz":-540,"elapsed":16447,"user":{"displayName":"‍김동구[학생](정경대학 언론정보학과)","photoUrl":"","userId":"02800889453040610191"}},"colab":{"base_uri":"https://localhost:8080/","height":52}},"source":["%%time\n","train['length'] = train['text'].apply(lambda x: len(x))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["CPU times: user 159 ms, sys: 0 ns, total: 159 ms\n","Wall time: 159 ms\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"Q8yNQJTkuMEp","colab_type":"text"},"source":["## 3. text[mms] 변환 전 원본 복사\n"]},{"cell_type":"code","metadata":{"id":"kT4RkjF5uTBu","colab_type":"code","colab":{}},"source":["train['orgin'] = train['text']"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"0yx3bMj7pJaG","colab_type":"text"},"source":["## 텍스트 변형"]},{"cell_type":"code","metadata":{"id":"Vj5ewRpxHwIo","colab_type":"code","colab":{}},"source":["# text를 바꿔주는 함수\n","def apply_replacement(org_df, preprocess_func):\n","    \"\"\"(pd.df, func) -> pd.df\n","     Retturn the pd.df applied for func on original pd.df\n","     >>> apply_replacement(df1, sum)\n","     sum matrix\n","    \"\"\"\n","    pre_df = org_df\n","    pre_df['text'] = pre_df['text'].apply(lambda x: preprocess_func(x))\n","    return pre_df \n","\n","# apply method: 행이나 열을 함수추가하여 바로 적용함"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"nksbIr_dPhOT","colab_type":"text"},"source":["### 1. 알파벳 소문자로 통일"]},{"cell_type":"code","metadata":{"id":"mWXbfXZQlHnj","colab_type":"code","outputId":"6da7b7b4-485e-4a60-8d77-904065e5e566","executionInfo":{"status":"ok","timestamp":1587710777193,"user_tz":-540,"elapsed":10013,"user":{"displayName":"‍김동구[학생](정경대학 언론정보학과)","photoUrl":"","userId":"02800889453040610191"}},"colab":{"base_uri":"https://localhost:8080/","height":52}},"source":["%%time\n","def alp_to_lower(mms):\n","    \"\"\" (str) -> str\n","    Return the mms after changing Upper to Lower\n","    >> alp_to_lower(\"Kim Dong Gu\")\n","    kim dong gu\n","    \"\"\"\n","    mms = mms.lower()\n","    return mms\n","train = apply_replacement(train, alp_to_lower)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["CPU times: user 419 ms, sys: 31.9 ms, total: 451 ms\n","Wall time: 451 ms\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"qTY4sUf8PhHj","colab_type":"text"},"source":["### 2. 불용어, 일반/스미싱 문자 공통적으로 많이 쓰인 단어 제거"]},{"cell_type":"code","metadata":{"id":"4kPOTDtiR9V9","colab_type":"code","outputId":"79538c87-a122-4375-e652-9291bcacee7f","executionInfo":{"status":"ok","timestamp":1587710779012,"user_tz":-540,"elapsed":10225,"user":{"displayName":"‍김동구[학생](정경대학 언론정보학과)","photoUrl":"","userId":"02800889453040610191"}},"colab":{"base_uri":"https://localhost:8080/","height":52}},"source":["%%time\n","def del_stop_words(mms):\n","    \n","    \"\"\"(str) -> str\n","     Return the mms after deleting stop words\n","     >>> del_stop_words('사랑했습니다')\n","     사랑\n","     \"\"\"\n","    for word in stop_words:\n","        mms = mms.replace(word, '')\n","    return mms\n","\n","train = apply_replacement(train, del_stop_words)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["CPU times: user 1.54 s, sys: 88.4 ms, total: 1.63 s\n","Wall time: 1.63 s\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"kVmrDwwlPhLR","colab_type":"text"},"source":["### 3. 특수문자 제거"]},{"cell_type":"code","metadata":{"id":"I0lqPNYrkMNo","colab_type":"code","outputId":"b10fca60-1585-487b-e47f-fa4a6b40738a","executionInfo":{"status":"ok","timestamp":1587710780250,"user_tz":-540,"elapsed":9940,"user":{"displayName":"‍김동구[학생](정경대학 언론정보학과)","photoUrl":"","userId":"02800889453040610191"}},"colab":{"base_uri":"https://localhost:8080/","height":52}},"source":["%%time\n","def del_spe_char(mms):\n","    \"\"\"(str) -> str\n","    Return the mms after deleting special charaters\n","    >> del_spe_char(\"$5000달러 환전\")\n","    5000달러 환전\n","    \"\"\" \n","    mms = re.sub(spe_char, '', mms)\n","    return mms\n","    \n","train = apply_replacement(train, del_spe_char)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["CPU times: user 1.13 s, sys: 4.47 ms, total: 1.13 s\n","Wall time: 1.13 s\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Y85i1Q9svDyi","colab_type":"code","colab":{}},"source":["del train['id']\n","del train['Unnamed: 0']"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"Qz0s5EqWvD1p","colab_type":"code","outputId":"edc6688c-b75e-48da-cbc7-dfb3cb2b4ab5","executionInfo":{"status":"ok","timestamp":1587710781191,"user_tz":-540,"elapsed":862,"user":{"displayName":"‍김동구[학생](정경대학 언론정보학과)","photoUrl":"","userId":"02800889453040610191"}},"colab":{"base_uri":"https://localhost:8080/","height":313}},"source":["train.head()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year_month</th>\n","      <th>text</th>\n","      <th>smishing</th>\n","      <th>morph</th>\n","      <th>spe_num</th>\n","      <th>length</th>\n","      <th>orgin</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2017-01</td>\n","      <td>은행성산팀장.행복한주말되</td>\n","      <td>0</td>\n","      <td>['XXX', '은', '행성', '산', 'XXX', '팀장', '입니다', '....</td>\n","      <td>0</td>\n","      <td>24</td>\n","      <td>XXX은행성산XXX팀장입니다.행복한주말되세요</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2017-01</td>\n","      <td>오늘도많이웃으시는하루시작하은행 진월동vip라운지 올림</td>\n","      <td>0</td>\n","      <td>['오늘', '도', '많이', '웃', '으시', '는', '하루', '시작', ...</td>\n","      <td>0</td>\n","      <td>37</td>\n","      <td>오늘도많이웃으시는하루시작하세요XXX은행 진월동VIP라운지 XXX올림</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2017-01</td>\n","      <td>안녕하십니까 고객님. 은행.금일 납부하셔야 할 금액은 153600원 .감사. 새해 ...</td>\n","      <td>0</td>\n","      <td>['안녕', '하', '십니까', '고객', '님', '.', 'XXX', '은행'...</td>\n","      <td>0</td>\n","      <td>81</td>\n","      <td>안녕하십니까 고객님. XXX은행입니다.금일 납부하셔야 할 금액은 153600원 입니...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2017-01</td>\n","      <td>고객님안녕하은행 지점지난 한 해 동안 저희 지점에 보내주신 성원에 감사드립니다. ...</td>\n","      <td>0</td>\n","      <td>['XXX', '고객', '님', '안녕', '하', '세요', 'XXX', '은행...</td>\n","      <td>0</td>\n","      <td>174</td>\n","      <td>XXX 고객님안녕하세요XXX은행 XXX지점입니다지난 한 해 동안 저희 XXX지점에 ...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2017-01</td>\n","      <td>1월은 새로움이 가득.올 한해 더 많이행복한 한해되시길바랍니다</td>\n","      <td>0</td>\n","      <td>['1', '월', '은', '새로움', '이', '가득', 'XXX', '입니다'...</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>1월은 새로움이 가득XXX입니다.올 한해 더 많이행복한 한해되시길바랍니다</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  year_month  ...                                              orgin\n","0    2017-01  ...                           XXX은행성산XXX팀장입니다.행복한주말되세요\n","1    2017-01  ...              오늘도많이웃으시는하루시작하세요XXX은행 진월동VIP라운지 XXX올림\n","2    2017-01  ...  안녕하십니까 고객님. XXX은행입니다.금일 납부하셔야 할 금액은 153600원 입니...\n","3    2017-01  ...  XXX 고객님안녕하세요XXX은행 XXX지점입니다지난 한 해 동안 저희 XXX지점에 ...\n","4    2017-01  ...           1월은 새로움이 가득XXX입니다.올 한해 더 많이행복한 한해되시길바랍니다\n","\n","[5 rows x 7 columns]"]},"metadata":{"tags":[]},"execution_count":25}]},{"cell_type":"code","metadata":{"id":"RIByn7vE8BD9","colab_type":"code","colab":{}},"source":["train.to_csv('prepared_train.csv', encoding='utf-8')"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"fd52e7KivF_d","colab_type":"text"},"source":["# 워드 임베딩(Word Embedding)\n","- 자연어를 컴퓨터가 이해하고, 효율적으로 처리하게 하기 위해서는 컴퓨터가 이해할 수 있도록 자연어를 적절히 변환할 필요가 있습니다.\n","\n","- transform, fit_transform 차이\n","    - https://datascience.stackexchange.com/questions/12321/difference-between-fit-and-fit-transform-in-scikit-learn-models\n"]},{"cell_type":"code","metadata":{"id":"b__3m0NyvGCe","colab_type":"code","colab":{}},"source":["# DTM 문서 단어 행렬\n","from sklearn.feature_extraction.text import CountVectorizer\n","vector = CountVectorizer()\n","\n","# TF-IDF\n","from sklearn.feature_extraction.text import TfidfVectorizer\n","from sklearn.feature_extraction.text import TfidfTransformer\n","tfvector = TfidfTransformer(smooth_idf=False)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"2NVnKnZ8vGFZ","colab_type":"code","colab":{}},"source":["vectorizer=TfidfVectorizer(ngram_range=(1, 3),\n","    min_df=2,   \n","    max_features=10000,\n","    sublinear_tf=True,\n","    lowercase=False,\n","    use_idf=True)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"qMqhh3M8vGIQ","colab_type":"code","outputId":"426e8ceb-439e-40ae-c713-13c8c092406c","executionInfo":{"status":"ok","timestamp":1587711880956,"user_tz":-540,"elapsed":52657,"user":{"displayName":"‍김동구[학생](정경대학 언론정보학과)","photoUrl":"","userId":"02800889453040610191"}},"colab":{"base_uri":"https://localhost:8080/","height":52}},"source":["%%time\n","vec_train = vectorizer.fit_transform(train['text'])"],"execution_count":0,"outputs":[{"output_type":"stream","text":["CPU times: user 49.9 s, sys: 1.8 s, total: 51.7 s\n","Wall time: 51.8 s\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"i7RMjLJ1_-kb","colab_type":"code","colab":{}},"source":["vec_df = pd.DataFrame(vec_train, columns = ['vec_text'], index = train.index)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"i1mKkMc7_-oL","colab_type":"code","outputId":"8c681115-a0ed-42ff-e676-bf48823c228b","executionInfo":{"status":"ok","timestamp":1587712348316,"user_tz":-540,"elapsed":967,"user":{"displayName":"‍김동구[학생](정경대학 언론정보학과)","photoUrl":"","userId":"02800889453040610191"}},"colab":{"base_uri":"https://localhost:8080/","height":402}},"source":["vec_df"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>vec_text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>(0, 6513)\\t1.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>(0, 4990)\\t0.36182691630823766\\n  (0, 3541)\\...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>(0, 923)\\t0.20299363703524304\\n  (0, 1544)\\t...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>(0, 9600)\\t0.7871520163378116\\n  (0, 816)\\t0...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>295940</th>\n","      <td>(0, 3542)\\t0.12677897713963715\\n  (0, 6909)\\...</td>\n","    </tr>\n","    <tr>\n","      <th>295941</th>\n","      <td>(0, 6429)\\t1.0</td>\n","    </tr>\n","    <tr>\n","      <th>295942</th>\n","      <td>(0, 198)\\t0.3761006031576186\\n  (0, 6811)\\t0...</td>\n","    </tr>\n","    <tr>\n","      <th>295943</th>\n","      <td>(0, 6808)\\t0.38499077501801604\\n  (0, 9088)\\...</td>\n","    </tr>\n","    <tr>\n","      <th>295944</th>\n","      <td>(0, 699)\\t0.15177546497419678\\n  (0, 665)\\t0...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>295945 rows × 1 columns</p>\n","</div>"],"text/plain":["                                                 vec_text\n","0                                                        \n","1                                          (0, 6513)\\t1.0\n","2         (0, 4990)\\t0.36182691630823766\\n  (0, 3541)\\...\n","3         (0, 923)\\t0.20299363703524304\\n  (0, 1544)\\t...\n","4         (0, 9600)\\t0.7871520163378116\\n  (0, 816)\\t0...\n","...                                                   ...\n","295940    (0, 3542)\\t0.12677897713963715\\n  (0, 6909)\\...\n","295941                                     (0, 6429)\\t1.0\n","295942    (0, 198)\\t0.3761006031576186\\n  (0, 6811)\\t0...\n","295943    (0, 6808)\\t0.38499077501801604\\n  (0, 9088)\\...\n","295944    (0, 699)\\t0.15177546497419678\\n  (0, 665)\\t0...\n","\n","[295945 rows x 1 columns]"]},"metadata":{"tags":[]},"execution_count":41}]},{"cell_type":"markdown","metadata":{"id":"1zRAraH8GMU1","colab_type":"text"},"source":["# train - validation - testset 구분"]},{"cell_type":"code","metadata":{"id":"lbJIttvPHNxp","colab_type":"code","colab":{}},"source":["from sklearn.model_selection import train_test_split\n","from sklearn.model_selection import KFold\n","\n","import lightgbm\n","import joblib"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"yzepzWaEGQeo","colab_type":"code","colab":{}},"source":["s_train = pd.concat([vec_df, train[['spe_num', 'length']]], axis=1)\n","s_label = train['smishing']"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"_9-KGIXXGhCR","colab_type":"code","outputId":"f8ce930c-724f-4485-9f75-68c3905adcf9","executionInfo":{"status":"ok","timestamp":1587712521579,"user_tz":-540,"elapsed":709,"user":{"displayName":"‍김동구[학생](정경대학 언론정보학과)","photoUrl":"","userId":"02800889453040610191"}},"colab":{"base_uri":"https://localhost:8080/","height":52}},"source":["# # train - test 분류\n","%%time\n","X_train, X_test, y_train, y_test = train_test_split(s_train,\n","                                                    s_label,\n","                                                    test_size = 0.2,\n","                                                    shuffle = True,\n","                                                    random_state = 3077)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["CPU times: user 62.4 ms, sys: 0 ns, total: 62.4 ms\n","Wall time: 67.3 ms\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Qi9ZHiNNIJQr","colab_type":"code","colab":{}},"source":["# # train - val 분류\n","X_train, X_val, y_train, y_val = train_test_split(s_train,\n","                                                    s_label,\n","                                                    test_size = 0.3,\n","                                                    shuffle = True,\n","                                                    random_state = 3077)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"YKS0F8R8JAI4","colab_type":"code","outputId":"ad06d578-e0e4-4d26-ef05-8ce015f34538","executionInfo":{"status":"ok","timestamp":1587714201995,"user_tz":-540,"elapsed":746,"user":{"displayName":"‍김동구[학생](정경대학 언론정보학과)","photoUrl":"","userId":"02800889453040610191"}},"colab":{"base_uri":"https://localhost:8080/","height":193}},"source":["X_train.info()"],"execution_count":0,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 207161 entries, 259202 to 81195\n","Data columns (total 3 columns):\n"," #   Column    Non-Null Count   Dtype \n","---  ------    --------------   ----- \n"," 0   vec_text  207161 non-null  object\n"," 1   spe_num   207161 non-null  int64 \n"," 2   length    207161 non-null  int64 \n","dtypes: int64(2), object(1)\n","memory usage: 16.3+ MB\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"wO3O9fQLCyi3","colab_type":"code","colab":{}},"source":["parms = {\n","    'learning_rate' : 0.06,\n","    'num_leaves' : 400,\n","    'n_estimators' : 300,\n","    'max_depth': -1,\n","    'min_child_weight' : 3, \n","    'subsample' : 0.8,\n","    'colsample_bytree' : 0.5,\n","    'objective' : 'multiclass',\n","    'n_jobs': -1\n","}"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"6pWiYAAVD-o_","colab_type":"code","outputId":"5f904f3e-4f59-4379-c624-74d527b2fb6a","executionInfo":{"status":"ok","timestamp":1587713347865,"user_tz":-540,"elapsed":965,"user":{"displayName":"‍김동구[학생](정경대학 언론정보학과)","photoUrl":"","userId":"02800889453040610191"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["len(list(train_idx))"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["155370"]},"metadata":{"tags":[]},"execution_count":77}]},{"cell_type":"code","metadata":{"id":"iZuXKJQbIUkG","colab_type":"code","outputId":"af5ed186-8477-411f-ca72-d88fd23f5d67","executionInfo":{"status":"error","timestamp":1587713177880,"user_tz":-540,"elapsed":696,"user":{"displayName":"‍김동구[학생](정경대학 언론정보학과)","photoUrl":"","userId":"02800889453040610191"}},"colab":{"base_uri":"https://localhost:8080/","height":459}},"source":["# 4FOLD, 3SEED ENSEMBLE\n","# 총 12개의 모델을 평균내어 예측한다\n","\n","lucky_seed=[1996, 8, 25]\n","\n","\n","# enumerate: 인덱스와 값을 둘다 반복시킬 때 사용\n","for num,rs in tqdm(enumerate(lucky_seed)):\n","\n","    # kfold cross validation  --> KFold(n_splits=\"k\")\n","    # trainset: 1-k/k       testset:1/k\n","    # Dataset을 k개가 되도록 나눔\n","    \n","    # k개로 나누어진 Dataset을 '1번 Testset, 2번~k개: Trainset'로 지정\n","    # 위의 방법으로 같은 Testset을 2,3,4,5...k번 까지 지정 (나머지는 Trainset)\n","    # k번 시도해서 Error들을 평균내어 최적 모델 선택\n","    \n","    # 굳이 쪼개주는 이유는?\n","    # 데이터가 적을 때 보완가능\n","    \n","    # http://nonmeyet.tistory.com/entry/KFold-Cross-Validation 교차검증-정의-및-설명\n","    kfold = KFold(n_splits=4, random_state = rs, shuffle = True)\n","\n","    # numpy.zeros((row,col))\n","    # row*col size 영행렬 생성\n","    # train.shape[0],198 -> trainset 41400개, target값:198개\n","    cv=np.zeros((X_train.shape[0],2))\n","\n","    for n, (train_idx, validation_idx) in tqdm(enumerate(kfold.split(X_train))):\n","\n","        # train - test 아닌 이유?\n","        # 이 모델링은 최종적으로 제출할 모델을 확인하는 과정이 아니라 중간점검\n","        # trian - validation 으로 결과본 후 최종적으로 모델 선택\n","        # 아래에선 12개 모델 평균으로 제출함.\n","        # KFold에서 n_splits=4 라고 했으므로 len(train_idx)=3/4, len(validation_idx)=1/4\n","        x_train, x_validation = X_train.loc[train_idx], X_train.loc[validation_idx]\n","        y_train, y_validation = y_train.loc[train_idx], y_train.loc[validation_idx]\n","\n","        \"\"\"\n","        #lightgbm의 분류기로 모델링\n","        model = lightgbm.LGBMClassifier(**parms, random_state=rs)\n","\n","        # early_stopping_rounds(n): 학습을 N번 시켰는데, 정확도 개선이 없는 경우 -> 학습 멈춤 \n","        # 학습시킴\n","        model.fit(x_train, y_train, eval_set=[(x_validation, y_validation)], early_stopping_rounds= 30,\n","                  verbose=100) \n","        \n","        # 모델결과 저장 lib\n","        joblib.dump(model, 'models/%s_fold_model_%s.pkl'%(n,rs))\n","\n","        # numpy.zeros((row,col))로 만들어주었던 영행렬: cv\n","        # data object에 X_validation 예측 값을 넣어줌\n","        # CROSS-VALIDATION , EVALUATE CV\n","        cv[validation_idx,:] = model.predict_proba(x_validation)\n","        \"\"\""],"execution_count":0,"outputs":[{"output_type":"stream","text":["0it [00:00, ?it/s]\n","0it [00:00, ?it/s]\n","0it [00:00, ?it/s]\n"],"name":"stderr"},{"output_type":"error","ename":"KeyError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m<ipython-input-71-09d4860be58e>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     32\u001b[0m         \u001b[0;31m# 아래에선 12개 모델 평균으로 제출함.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     33\u001b[0m         \u001b[0;31m# KFold에서 n_splits=4 라고 했으므로 len(train_idx)=3/4, len(validation_idx)=1/4\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 34\u001b[0;31m         \u001b[0mx_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx_validation\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mX_train\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mloc\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mtrain_idx\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX_train\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mloc\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mvalidation_idx\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     35\u001b[0m         \u001b[0my_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_validation\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mloc\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mtrain_idx\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mloc\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mvalidation_idx\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     36\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/indexing.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   1766\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1767\u001b[0m             \u001b[0mmaybe_callable\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcom\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply_if_callable\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1768\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_getitem_axis\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmaybe_callable\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1769\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1770\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_is_scalar_access\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkey\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mTuple\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/indexing.py\u001b[0m in \u001b[0;36m_getitem_axis\u001b[0;34m(self, key, axis)\u001b[0m\n\u001b[1;32m   1952\u001b[0m                     \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Cannot index with multidimensional key\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1953\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1954\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_getitem_iterable\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1955\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1956\u001b[0m             \u001b[0;31m# nested tuple slicing\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/indexing.py\u001b[0m in \u001b[0;36m_getitem_iterable\u001b[0;34m(self, key, axis)\u001b[0m\n\u001b[1;32m   1593\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1594\u001b[0m             \u001b[0;31m# A collection of keys\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1595\u001b[0;31m             \u001b[0mkeyarr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_listlike_indexer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mraise_missing\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1596\u001b[0m             return self.obj._reindex_with_indexers(\n\u001b[1;32m   1597\u001b[0m                 \u001b[0;34m{\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mkeyarr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mallow_dups\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/indexing.py\u001b[0m in \u001b[0;36m_get_listlike_indexer\u001b[0;34m(self, key, axis, raise_missing)\u001b[0m\n\u001b[1;32m   1551\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1552\u001b[0m         self._validate_read_indexer(\n\u001b[0;32m-> 1553\u001b[0;31m             \u001b[0mkeyarr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mo\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_axis_number\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mraise_missing\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mraise_missing\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1554\u001b[0m         )\n\u001b[1;32m   1555\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mkeyarr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/indexing.py\u001b[0m in \u001b[0;36m_validate_read_indexer\u001b[0;34m(self, key, indexer, axis, raise_missing)\u001b[0m\n\u001b[1;32m   1653\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mis_categorical\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mis_interval\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1654\u001b[0m                 raise KeyError(\n\u001b[0;32m-> 1655\u001b[0;31m                     \u001b[0;34m\"Passing list-likes to .loc or [] with any missing labels \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1656\u001b[0m                     \u001b[0;34m\"is no longer supported, see \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1657\u001b[0m                     \u001b[0;34m\"https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#deprecate-loc-reindex-listlike\"\u001b[0m  \u001b[0;31m# noqa:E501\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'Passing list-likes to .loc or [] with any missing labels is no longer supported, see https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#deprecate-loc-reindex-listlike'"]}]},{"cell_type":"code","metadata":{"id":"fEGdWxiUGkb_","colab_type":"code","colab":{}},"source":[" a= list(train_idx)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"b6r5ARVbGlV5","colab_type":"code","outputId":"5f7b6d0d-d8d1-48fb-c4ef-ff1bb18dab46","executionInfo":{"status":"error","timestamp":1587713968210,"user_tz":-540,"elapsed":680,"user":{"displayName":"‍김동구[학생](정경대학 언론정보학과)","photoUrl":"","userId":"02800889453040610191"}},"colab":{"base_uri":"https://localhost:8080/","height":336}},"source":["y_train.loc[train_idx]"],"execution_count":0,"outputs":[{"output_type":"error","ename":"KeyError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m<ipython-input-97-a71129df47ae>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0my_train\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mloc\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mtrain_idx\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/indexing.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   1766\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1767\u001b[0m             \u001b[0mmaybe_callable\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcom\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply_if_callable\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1768\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_getitem_axis\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmaybe_callable\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1769\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1770\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_is_scalar_access\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkey\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mTuple\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/indexing.py\u001b[0m in \u001b[0;36m_getitem_axis\u001b[0;34m(self, key, axis)\u001b[0m\n\u001b[1;32m   1952\u001b[0m                     \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Cannot index with multidimensional key\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1953\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1954\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_getitem_iterable\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1955\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1956\u001b[0m             \u001b[0;31m# nested tuple slicing\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/indexing.py\u001b[0m in \u001b[0;36m_getitem_iterable\u001b[0;34m(self, key, axis)\u001b[0m\n\u001b[1;32m   1593\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1594\u001b[0m             \u001b[0;31m# A collection of keys\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1595\u001b[0;31m             \u001b[0mkeyarr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_listlike_indexer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mraise_missing\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1596\u001b[0m             return self.obj._reindex_with_indexers(\n\u001b[1;32m   1597\u001b[0m                 \u001b[0;34m{\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mkeyarr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mallow_dups\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/indexing.py\u001b[0m in \u001b[0;36m_get_listlike_indexer\u001b[0;34m(self, key, axis, raise_missing)\u001b[0m\n\u001b[1;32m   1551\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1552\u001b[0m         self._validate_read_indexer(\n\u001b[0;32m-> 1553\u001b[0;31m             \u001b[0mkeyarr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mo\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_axis_number\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mraise_missing\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mraise_missing\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1554\u001b[0m         )\n\u001b[1;32m   1555\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mkeyarr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/indexing.py\u001b[0m in \u001b[0;36m_validate_read_indexer\u001b[0;34m(self, key, indexer, axis, raise_missing)\u001b[0m\n\u001b[1;32m   1653\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mis_categorical\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mis_interval\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1654\u001b[0m                 raise KeyError(\n\u001b[0;32m-> 1655\u001b[0;31m                     \u001b[0;34m\"Passing list-likes to .loc or [] with any missing labels \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1656\u001b[0m                     \u001b[0;34m\"is no longer supported, see \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1657\u001b[0m                     \u001b[0;34m\"https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#deprecate-loc-reindex-listlike\"\u001b[0m  \u001b[0;31m# noqa:E501\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'Passing list-likes to .loc or [] with any missing labels is no longer supported, see https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#deprecate-loc-reindex-listlike'"]}]},{"cell_type":"code","metadata":{"id":"UH5nAPgvGlZO","colab_type":"code","outputId":"b88b5863-c311-4f73-84fd-5f04480f16ec","executionInfo":{"status":"ok","timestamp":1587713932678,"user_tz":-540,"elapsed":763,"user":{"displayName":"‍김동구[학생](정경대학 언론정보학과)","photoUrl":"","userId":"02800889453040610191"}},"colab":{"base_uri":"https://localhost:8080/","height":402}},"source":["X_train"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>vec_text</th>\n","      <th>spe_num</th>\n","      <th>length</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>259202</th>\n","      <td>(0, 1525)\\t0.30242422479507014\\n  (0, 212)\\t...</td>\n","      <td>12</td>\n","      <td>270</td>\n","    </tr>\n","    <tr>\n","      <th>139081</th>\n","      <td>(0, 861)\\t0.29933730315796997\\n  (0, 565)\\t0...</td>\n","      <td>0</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>134719</th>\n","      <td>(0, 8722)\\t0.4275446916569335\\n  (0, 565)\\t0...</td>\n","      <td>0</td>\n","      <td>112</td>\n","    </tr>\n","    <tr>\n","      <th>149579</th>\n","      <td>(0, 7175)\\t0.5076135076014064\\n  (0, 9591)\\t...</td>\n","      <td>0</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>182043</th>\n","      <td>(0, 8640)\\t0.7428233292823715\\n  (0, 837)\\t0...</td>\n","      <td>1</td>\n","      <td>40</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>138519</th>\n","      <td>(0, 1287)\\t0.4893877682799477\\n  (0, 1376)\\t...</td>\n","      <td>1</td>\n","      <td>36</td>\n","    </tr>\n","    <tr>\n","      <th>275763</th>\n","      <td>(0, 3587)\\t0.2897279468855027\\n  (0, 2993)\\t...</td>\n","      <td>2</td>\n","      <td>89</td>\n","    </tr>\n","    <tr>\n","      <th>3102</th>\n","      <td>(0, 1661)\\t0.07671820970354809\\n  (0, 6120)\\...</td>\n","      <td>13</td>\n","      <td>923</td>\n","    </tr>\n","    <tr>\n","      <th>206915</th>\n","      <td>(0, 3361)\\t0.16175333662991392\\n  (0, 9769)\\...</td>\n","      <td>0</td>\n","      <td>108</td>\n","    </tr>\n","    <tr>\n","      <th>81195</th>\n","      <td>(0, 412)\\t0.5170004153137383\\n  (0, 3873)\\t0...</td>\n","      <td>0</td>\n","      <td>33</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>207161 rows × 3 columns</p>\n","</div>"],"text/plain":["                                                 vec_text  spe_num  length\n","259202    (0, 1525)\\t0.30242422479507014\\n  (0, 212)\\t...       12     270\n","139081    (0, 861)\\t0.29933730315796997\\n  (0, 565)\\t0...        0      61\n","134719    (0, 8722)\\t0.4275446916569335\\n  (0, 565)\\t0...        0     112\n","149579    (0, 7175)\\t0.5076135076014064\\n  (0, 9591)\\t...        0      33\n","182043    (0, 8640)\\t0.7428233292823715\\n  (0, 837)\\t0...        1      40\n","...                                                   ...      ...     ...\n","138519    (0, 1287)\\t0.4893877682799477\\n  (0, 1376)\\t...        1      36\n","275763    (0, 3587)\\t0.2897279468855027\\n  (0, 2993)\\t...        2      89\n","3102      (0, 1661)\\t0.07671820970354809\\n  (0, 6120)\\...       13     923\n","206915    (0, 3361)\\t0.16175333662991392\\n  (0, 9769)\\...        0     108\n","81195     (0, 412)\\t0.5170004153137383\\n  (0, 3873)\\t0...        0      33\n","\n","[207161 rows x 3 columns]"]},"metadata":{"tags":[]},"execution_count":96}]},{"cell_type":"code","metadata":{"id":"AHwD1FVUGlck","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"jt-SUpfSIUn1","colab_type":"code","colab":{}},"source":["# MODEL LOAD & TEST PREDICT\n","# 12 MODELS 평균 사용\n","models = os.listdir('models/')\n","models_list = [x for x in models if x.endswith(\".pkl\")]\n","\n","# 모델결과가 잘 나왔는지 check\n","# assert: 좌항과 우항의 값이 같으면 정상 작동, 다르면 오류 발생\n","assert len(models_list) ==12\n","\n","\n","temp_predictions = np.zeros((X_test.shape[0],2))\n","\n","# 12개 모델을 반복시켜서 결과산출 -> 12로 나눠서 평균값 계산\n","for m in models_list:\n","    model = joblib.load('models/'+m)\n","    predict_proba = model.predict_proba(X_test)\n","    temp_predictions += predict_proba/12"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"ACPLEidvIUrw","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"1fjzzoc-IUun","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"IF20RcIgIUyX","colab_type":"text"},"source":["## 질문\n","1. sklearn tokenizer vs word2vec 차이"]},{"cell_type":"code","metadata":{"id":"iJQHMJblIU2C","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"xrB8k0VqIU6B","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"U2SUFBLsvGLA","colab_type":"text"},"source":["# Imbalanced data 개선\n","1. Over Sampling\n","2. Under Sampling\n","3. Combining Over and Under Sampling"]},{"cell_type":"markdown","metadata":{"id":"5HoEAWJPvGNV","colab_type":"text"},"source":["## 1. Over Sampling"]},{"cell_type":"markdown","metadata":{"id":"jkPnxg8PvGQd","colab_type":"text"},"source":["## 2. Under Sampling"]},{"cell_type":"markdown","metadata":{"id":"9Rl91NT0vGS2","colab_type":"text"},"source":["## 3. Combining Over and Under Sampling"]}]}